@model WebApplication.Models.Model.Admin

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="tr">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit</title>
    <link rel="icon" type="image/png" sizes="16x16" href="~/Uploads/ID/cropped-parasut.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
          integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        body {
            background-image: url('/Uploads/ID/login.jpg');
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 30px;
        }
    </style>
</head>

<body class="d-flex align-items-center justify-content-center vh-100">

    <div class="container my-5">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">
                            <i class="fas fa-user-edit"></i> Profil Düzenle
                        </h4>
                    </div>
                    <div class="card-body">
                        @if (TempData["Message"] != null)
                        {
                            <div class="alert alert-info">
                                @TempData["Message"]
                            </div>
                        }

                        @using (Html.BeginForm("Edit", "Profile", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.AdminId)
                            @Html.HiddenFor(model => model.Authority)

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    @Html.LabelFor(model => model.Name, "Ad", new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3">
                                    @Html.LabelFor(model => model.Surname, "Soyad", new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model.Surname, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(model => model.Email, "E-posta", new { @class = "form-label" })
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", type = "email", required = "required" })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Mevcut Rol</label>
                                <input type="text" class="form-control" value="@Model.Authority" readonly />
                                <small class="form-text text-muted">Rolünüzü değiştiremezsiniz.</small>
                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(model => model.Password, "Yeni Şifre (Boş bırakılırsa değiştirilmez)", new { @class = "form-label" })
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Yeni şifre (opsiyonel)" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                <small class="form-text text-muted">Şifrenizi değiştirmek istemiyorsanız bu alanı boş bırakın.</small>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <button type="submit" class="btn btn-primary w-100">
                                        <i class="fas fa-save"></i> Güncelle
                                    </button>
                                </div>
                                <div class="col-md-6">
                                    <a href="@Url.Action("Index", "Home")" class="btn btn-secondary w-100">
                                        <i class="fas fa-arrow-left"></i> Ana Sayfaya Dön
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Bootstrap form validation
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
</body>

</html>